
// Return luma (from 0 to 100)
@function luma($c) {
    $-local-red: red(rgba($c, 1.0));
    $-local-green: green(rgba($c, 1.0));
    $-local-blue: blue(rgba($c, 1.0));

    @return ((0.2126 * $-local-red  +
        0.7152 * $-local-green +
        0.0722 * $-local-blue) / 255) * 100;
}




@mixin button-color($color) {
    background: $color;

    @if luma($color) > 50 {
        color: #000;

        &:hover,&:focus{
            background: darken($color, 8%);
        }

    } @else{
        color: #fff;

        &:hover,&:focus{
            background: lighten($color, 8%);
        }
    }
}

@mixin button-color-light($color, $bg-cl: darken($color, 8%)) {
    background: $color;
    color: #fff;
    &:hover,&:focus{
        background: $bg-cl;
    }    
}

@mixin button-color-dark($color, $bg-cl: lighten($color, 8%)) {
    background: $color;
    color: #fff;
    &:hover,&:focus{
        background: $bg-cl;
    }    
}

@mixin input(){
    padding: 6px 12px;
    font-size: 14px;
    line-height: 1.42857143;
    color: #555;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;

    &:focus {
        border-color: #66afe9;
        outline: 0;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, .6);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, .6);
    }
    &::-moz-placeholder {
        color: #777;
        opacity: 1;
    }
    &:-ms-input-placeholder {
        color: #777;
    }
    &::-webkit-input-placeholder {
        color: #777;
    }

    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        cursor: not-allowed;
        background-color: #eee;
        opacity: 1;
    }
}